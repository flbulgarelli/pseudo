/*
 * generated by Xtext
 */
package org.uqbarproject.pseudo.scoping;

import java.util.ArrayList;
import java.util.List;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EReference;
import org.eclipse.xtext.scoping.IScope;
import org.eclipse.xtext.scoping.Scopes;
import org.eclipse.xtext.scoping.impl.AbstractDeclarativeScopeProvider;
import org.uqbarproject.pseudo.pseudo.Attribute;
import org.uqbarproject.pseudo.pseudo.ClassType;
import org.uqbarproject.pseudo.pseudo.LocalVariable;
import org.uqbarproject.pseudo.pseudo.Method;

import com.google.common.base.Predicates;
import com.google.common.collect.Collections2;

/**
 * This class contains custom scoping description.
 * 
 * see : http://www.eclipse.org/Xtext/documentation/latest/xtext.html#scoping on
 * how and when to use it
 * 
 */
public class PseudoScopeProvider extends AbstractDeclarativeScopeProvider {

  IScope scope_EObject(Method method, EReference eRef) {
    ClassType type = (ClassType) method.eContainer();
    List<EObject> crossRefTargets = new ArrayList<EObject>();
    crossRefTargets.addAll(Collections2.filter(method.getStatements(), Predicates.instanceOf(LocalVariable.class)));
    crossRefTargets.addAll(method.getParameters());
    crossRefTargets.addAll(Collections2.filter(type.getMembers(), Predicates.instanceOf(Attribute.class)));
    return Scopes.scopeFor(crossRefTargets);
  }

}
