grammar org.uqbarproject.pseudo.Tokens with org.eclipse.xtext.common.Terminals

END_TOKEN: 'fin';

EXCEPTION_TOKEN: 'excepcion';
CLASS_TOKEN: 'clase';
INHERITS_TOKEN: 'hereda';

METHOD_TOKEN: 'mi' | 'metodo';
ATTRIBUTE_TOKEN: 'vi' | 'atributo';

CLASS_METHOD_TOKEN: 'vc' | 'metodo' 'de' 'clase'  ;
CLASS_ATTRIBUTE_TOKEN: 'mc' | 'atributo' 'de' 'clase';

OVERRIDE_TOKEN: 'redefinir';
SUPER_TOKEN: 'padre' | 'super' | 'redefinido' ;
/* Generic elemetns lists */
SEPARATOR_TOKEN: ',';
OPEN_TOKEN: '(';
CLOSE_TOKEN: ')';

MESSAGE_SEND_TOKEN:
	'.'
;

/* basic literals */

NULL_TOKEN : 'nada';
TRUE_TOKEN: 'verdadero'|'si';
FALSE_TOKEN: 'falso'|'no';
SELF_TOKEN: 'este'|'esta';
CATCHED_EXCEPTION_TOKEN: 'atrapada' | 'capturada';

/* collection literals */
LIST_OPEN_TOKEN:
	'lista' '('
;
LIST_CLOSE_TOKEN:
	')'
;
SET_OPEN_TOKEN:
	'conjunto' '('
;
SET_CLOSE_TOKEN:
	')'
;

/* When Tokens */
WHEN_TOKEN: 'cuando';
THEN_TOKEN: 'entonces';
OTHERWISE_TOKEN: 'caso contrario' | 'otro caso';

RETURN_TOKEN: 'devolver';
THROW_TOKEN: 'lanzar';
ERROR_TOKEN: 'error';
TRY_TOKEN: 'intentar';
CATCH_TOKEN: 'capturar';

/* Assignment tokens */

LET_TOKEN: 'variable';
ASSIGN_TOKEN: 'actualizar';
INCREMENT_TOKEN: 'incrementar';
DECREMENT_TOKEN: 'decrementar';
ACCUM_BY_TOKEN: 'en';

/* Instantiation tokens */
NEW_TOKEN: 'nuevo';
INIT_TOKEN: 'inicializar';
SETUP_TOKEN: 'configurar';
INIT_WITH_TOKEN: 'con' ; 


/* Message composition */
AND_THEN_TOKEN: 'luego';
COMPOSE_TOKEN: 'compuesto' ;

OR_TOKEN: 'o' ;
AND_TOKEN: 'y' ;

/* Traversable-related */
WHERE_TOKEN: 'tal' 'que';
SUM_TOKEN: 'suma' | 'sumatoria';
ANY_TOKEN: 'alguno';
ALL_TOKEN: 'todo';
MAX_TOKEN: 'max' | 'maximo';
MIN_TOKEN: 'min' | 'minimo';
AVERAGE_TOKEN: 'promedio';
REDUCTION_SOURCE_TOKEN : 'entre' ;
COMPARE_BY_TOKEN: 'segun';
FOR_ALL_IN_TOKEN: 'para' 'todos' 'en';
SELECT_TOKEN: 'seleccionar'|'generar'|'colectar'|'mapear';
SELECT_FROM_TOKEN: 'de';
FIRST_TOKEN: 'primer' | 'primero' ;
TAKE_TOKEN: 'primeros' | 'tomar';
SATISFY_TOKEN:'satisface';
OF_TOKEN: 'de';