grammar org.uqbarproject.pseudo.Pseudo with org.eclipse.xtext.common.Terminals

/*
 * 
 * no tipado
en espaÃ±ol
preferir texto
filtrar, mapear, todos, ninguno, para cada a nivel lenguaje
listas literales: Conjunto( ), Lista(), Diccionario( clave : valor )
lambdas? 
sin sobrecarga
mixins
constructores alla scala
sin paquetes
orientado a mensajes
composicion de computaciones x LUEGO y
* variables automaticas?
 * 
 */
generate pseudo "http://www.uqbarproject.org/pseudo/Pseudo"

Model:
	types+=Type*;

Type:
	'clase' name=ID ('hereda de' superType=[Type])?
	declarations+=Declaration*
	'fin' ('clase'?);

Declaration:
	Attribute | Method;

Method:
	'metodo' (classMethod?='de clase'?) name=ID ('(' parameters+=ID* ')')?
	statements+=Expression*
	'fin' ('metodo'?);

Attribute:
	'atributo' (classAttribute?='de clase'?) name=ID (':=' initialValue=Expression)?;

Expression:
	MessageSendExpression |
	TraversableExpression | 
	Assignment | 
	IfExpression | 
	{IdExpression} value = ID |
	{StringExpression} value = STRING |
	{NullExpression} NULL |
	{NumberExpression} value = Number;

Number:
	INT ('.' INT)?;

TraversableExpression:
//TODO ojo que se necesita aplicacion parcial o lambdas
	MaxExpression | //
	MinExpression | //
	AverageExpression | //
	SumExpression | //
	ComprehensionExpression | //
	ForEachExpression
	//	FindExpression |
	//	SortExpression 
;

IfExpression:
	'si' (condition=Expression) 
	'entonces' trueExpression = Expression 
	'de lo contrario' falseExpression = Expression
	'fin'
;

MessageSendExpression:
	SelfUnaryMessageShortcutExpression | SimpleMessageSend  	
;

SimpleMessageSend:
	receptor = ID ',' message = Message 
;

SelfUnaryMessageShortcutExpression:
	('su'|'sus') message = Message
;

Message:
	UnaryMessage //| KeywordMessage
;

UnaryMessage:
	selector=ID //=>(key+=ID argument+=ID)*
;

ComprehensionExpression:
	'generar' (mapping=Message 'de')? target=Expression (=>'tal que' condition=Message)?;

ForEachExpression:
	'para cada' ID 'en' (target=Expression) (=>'tal que' condition=Message)? action=Message;

SumExpression:
	'sumatoria' mapping=Message 'de' target=Expression;

AverageExpression:
	'promedio' mapping=Message 'de' target=Expression;

MaxExpression:
	'maximo entre' target=Expression (=>'segun' condition=Message)?;

MinExpression:
	'minimo entre' target=Expression (=>'segun' condition=Message)?;

Assignment:
	(assigned=ID) ':=' (value=Expression);

terminal NULL:
	'nada';

terminal RETURN:
	'devolver';


terminal THROW:
	'lanzar';


