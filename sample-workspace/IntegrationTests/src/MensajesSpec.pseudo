class Mensajes

  /* delegacion en self */
  def def_que_delega_en_si_mismo
    self.def_delegado
  end

  def def_delegado
    5
  end

  def def_que_pasa_parametros(parametro1, parametro2)
    self.def_delegado_con_parametros(parametro1, parametro2)
  end

  def def_delegado_con_parametros(parametro1, parametro2)
    parametro1.add(parametro2)
  end

  def def_que_delega_en_otro_objeto
    5.toString
  end

  def def_que_envia_mensaje_a_la_class
    var mi_class = self.getClass
    mi_class.foo
  end

  def def_que_envia_mensaje_de_class_a_la_instancia
    self.foo
  end 
  
  def def_que_encadena
    var contador = new Contador
    contador.contar >> contar >> contar
    contador.i
  end
  
  def mayor_o_emancipada(persona)
    persona.es_mayor or emancipada
  end
  
  def mayor_y_argentina(persona)
    persona.es_mayor and argentina
  end
  
  def def_que_compone
    var hola = " hola "
    hola.length Â· trim
  end
  
  def def_que_pasa_literales_de_list_como_argumentos
    var l = list()
    l.add_all(set(4, 5))
  end

  classdef foo
    4
  end

end

class Contador
  attr i = 0
  def contar
    incr i
  end
end